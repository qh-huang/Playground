// 1428. Leftmost Column with at Least a One

/**
 * // This is the BinaryMatrix's API interface.
 * // You should not implement it, or speculate about its implementation
 * class BinaryMatrix {
 *   public:
 *     int get(int row, int col);
 *     vector<int> dimensions();
 * };
 */

class Solution {
public:
    int leftMostColumnWithOne(BinaryMatrix &binaryMatrix) {
        min_col = 101; // 1 <= rows, cols <= 100
        vector<int> dims = binaryMatrix.dimensions();
        int rows = dims[0];
        int cols = dims[1];
        // do binary search though all rows
        for (int r = 0; r<rows; r++) {
            int lo = 0;
            int hi = cols-1;
            int mid = (lo + hi)/2;
            while (lo < hi) {
                mid = (lo + hi)/2;
                if (binaryMatrix.get(r, mid) == 1) {
                    hi = mid;
                } else {
                    lo = mid+1;
                }
            }
            if (binaryMatrix.get(r, hi) == 1) {
                min_col = min(hi, min_col);
            }
        }
        return (min_col == 101)? -1 : min_col;
    }
    int min_col;
};
